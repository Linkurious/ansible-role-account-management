---
# Main task file for account-management role

- name: 'INIT | Manage variables to use for our target'
  include_tasks: "{{ role_path }}/tasks/manage_variables.yml"
  tags:
    - 'role::account-management'
    - 'role::account-management::config'
    - 'role::account-mangement::init'
    - 'role::account-management::install'

- name: 'CREATE SKELETON | copy templates files'
  template:
    dest: "{{ item.dest }}"
    src: "{{ item.src }}"
    mode: "{{ item.mode }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  with_items: "{{ am_skeleton_files_config }}"
  when: am_copy_skeleton_files

- name: 'CREATE | accounts'
  include_tasks: "{{ role_path }}/tasks/create_accounts.yml"
  no_log: true
  tags:
    - 'role::account-management'
    - 'role::account-management::config'
    - 'role::account-mangement::init'
    - 'role::account-mangement::user-management'


- name: 'CREATE | Create user authorized-keys file'
  become: True
  no_log: true
  authorized_key:
    comment: "{{ item.comment | default('') }}"
    exclusive: "{{ item.0.exclusive_public_keys | default(False) }}"
    key: "{{ lookup('file', item.1.filename) }}"
    key_options: "{{ item.1.key_options | default('') }}"
    manage_dir: "{{ item.manage_dir | default(True) }}"
    path: "{{ item.0.home | default ('/home/' + item.0.name) }}/.ssh/authorized_keys"
    state: "{{ item.1.state | default('present') }}"
    user: "{{ item.0.name }}"
  with_subelements:
    - "{{ account_management_users }}"
    - 'authorized_public_keys'
    - flags:
      skip_missing: true
  tags:
    - 'role::account-management'
    - 'role::account-management::config'
    - 'role::account-mangement::init'
    - 'role::account-mangement::user-management'

- name: 'ACCOUNTS | SECURITY | Secure home folders'
  include_tasks: "{{ role_path }}/tasks/secure_home.yml"
  no_log: true
  tags:
    - 'role::account-management'
    - 'role::account-management::config'
